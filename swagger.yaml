swagger: "2.0"
info:
  description: "affinity cast study."
  version: "1.0.0"
  title: "Affinity Test"
basePath: "/api"
tags:
- name: "app"
  description: "apis with application"
- name: "webhook"
  description: "apis with webhook"
- name: "incidents"
  description: "about incident"
schemes:
- "https"
- "http"
paths:
  /apps:
    post:
      tags:
      - "app"
      summary: "Create a new application"
      description: ""
      operationId: "createApp"
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "formData"
        name: "name"
        description: "app name"
        required: true
        type: "string"
      - in: "formData"
        name: "frequency"
        description: "request frequency"
        required: true
        type: "integer"
      - in: "formData"
        name: "url"
        description: "request url"
        required: true
        type: "string"
      - in: "formData"
        name: "body"
        description: "request body"
        required: false
        type: "string"
      - in: "formData"
        name: "headers"
        description: "request header"
        required: false
        type: "string"
      responses:
        "200":
          description: 'ok'
          schema:
            $ref: "#/definitions/App"
        "400":
          description: "Invalid parameters"
  /apps/{appId}:
    put:
      tags:
      - "app"
      summary: "update application"
      description: ""
      operationId: "updateApp"
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "path"
        name: "appId"
        description: "app id"
        required: true
        type: "string"
      - in: "formData"
        name: "name"
        description: "app name"
        required: true
        type: "string"
      - in: "formData"
        name: "frequency"
        description: "request frequency"
        required: true
        type: "integer"
      - in: "formData"
        name: "url"
        description: "request url"
        required: true
        type: "string"
      - in: "formData"
        name: "body"
        description: "request body"
        required: false
        type: "string"
      - in: "formData"
        name: "headers"
        description: "request header"
        required: false
        type: "string"
      responses:
        "200":
          description: 'ok'
          schema:
            $ref: "#/definitions/App"
        "400":
          description: "Invalid parameters"
    delete:
      tags:
      - "app"
      summary: "delete a application"
      description: ""
      operationId: "deleteApp"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "path"
        name: "appId"
        description: "app id"
        required: true
        type: "string"
      responses:
        "200":
          schema:
            $ref: "#/definitions/App"
          description: "Invalid ID supplied"
        "400":
          description: "Invalid parameters"
  /incidents:
    get:
      tags:
      - "incidents"
      summary: "Finds incidents follow time and appId"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findPetsByStatus"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "days"
        in: "query"
        description: "days to return incident"
        required: false
        default: 30
        type: "number"
      - in: "query"
        name: "appId"
        description: "app id"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Incident"
        "400":
          description: "Invalid parameters"
  /webhook:
    post:
      tags:
      - "webhook"
      summary: "register incident webhook"
      description: "register incident webhook"
      operationId: "reg webhook"
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "callbackUrl"
        in: "formData"
        description: "webhook's callbackUrl"
        required: true
        type: "string"
      - name: "all"
        in: "formData"
        description: "if listen all apps"
        required: false
        default: false
        type: "boolean"
      - name: "appIds"
        in: "formData"
        type: "array"
        items:
          type: "string"
        description: "reg appId"
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Webhook"
        "400":
          description: "Invalid parameters"
definitions:
  App:
    type: "object"
    properties:
      name:
        type: "string"
      frequency:
        type: "integer"
      enabled:
        type: "boolean"
        default: true
      url:
        type: "string"
      method:
        type: "string"
        enum:
        - "get"
        - "post"
        - "put"
        - "delete"
      body:
        type: "object"
      headers:
        type: "object"
      created:
        type: "string"
        format: "date-time"
      updated:
        type: "string"
        format: "date-time"
  Incident:
    type: "object"
    properties:
      appId:
        type: "string"
      startTime:
        type: "string"
      endTime:
        type: "string"
      inError:
        type: "boolean"
      statusCode:
        type: "number"
  Webhook:
    type: "object"
    properties:
      callbackUrl:
        type: "string"
      created:
        type: "string"
      updated:
        type: "string"
      appIds:
        type: "array"
        items:
          type: "string"
      all:
        type: "boolean"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
